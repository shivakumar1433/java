import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'balancedSums' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static String balancedSums(List<Integer> arr) {
    // Write your code here
    if(arr.size()==1)return "YES";
   // String f="";
    int s=0,s1=0;
    for(int i=0;i<arr.size();i++){
     s=s+arr.get(i);
    }
    //arr.add(-1,0);
for(int i=0;i<arr.size();i++){
   /* if(i==0){
       s=s-arr.get(i);
       s1=0;
       if(s==s1);
       f="true";
       break;*/
       if(s1==(s-arr.get(i)))return "YES";
    
    /*if(i==arr.size()-1){
        s1=0;
        s=s-arr.get(i);
        if(s==s1)
        f="true";
        break;
    }*/
    
    s=s-arr.get(i);
    s1=s1+arr.get(i);
}
    return "NO";

}
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int T = Integer.parseInt(bufferedReader.readLine().trim());

        for (int TItr = 0; TItr < T; TItr++) {
            int n = Integer.parseInt(bufferedReader.readLine().trim());

            String[] arrTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

            List<Integer> arr = new ArrayList<>();

            for (int i = 0; i < n; i++) {
                int arrItem = Integer.parseInt(arrTemp[i]);
                arr.add(arrItem);
            }

            String result = Result.balancedSums(arr);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedReader.close();
        bufferedWriter.close();
    }

}
